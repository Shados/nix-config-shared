#!/usr/bin/env bash

LINK=enp0s3

# Setup link-local IPv4 address -- yes, we're not bothering to randomize it, deal w/ it
ip addr add 169.254.65.121/16 brd + dev "${LINK}"
ip link set "${LINK}" up

# Configurables
AUTHK=/home/shados/.ssh/authorized_keys
METADATA="http://169.254.169.254/metadata/v1.json"

# JSON metadata parsing, requires jshon
JMD=$(curl -s $METADATA)
echo $JMD > $(mktemp)
HSTNM=`echo $JMD | jshon -e hostname -u`
PUBKEYS=`echo $JMD | jshon -e public_keys -a -u`
IPV4A=`echo $JMD | jshon -e interfaces -e public -e 0 -e ipv4 -e ip_address -u`
IPV4N=`echo $JMD | jshon -e interfaces -e public -e 0 -e ipv4 -e netmask -u`
IPV4G=`echo $JMD | jshon -e interfaces -e public -e 0 -e ipv4 -e gateway -u`
IPV6A=`echo $JMD | jshon -e interfaces -e public -e 0 -e ipv6 -e ip_address -u`
IPV6C=`echo $JMD | jshon -e interfaces -e public -e 0 -e ipv6 -e cidr -u`
IPV6G=`echo $JMD | jshon -e interfaces -e public -e 0 -e ipv6 -e gateway -u`
DNS=`echo $JMD | jshon -e dns -e nameservers -a -u`

# Hostname
hostnamectl set-hostname $HSTNM
echo "Set hostname"

# Public keys for shados
if [ ! -f $AUTHK ]; then
  echo $PUBKEYS > $AUTHK
  chown shados:shados $AUTHK
  chmod 600 $AUTHK
  echo "Set public keys for shados"
else
  echo "shados already has public keys set"
fi

# IPv4 + IPv6 + DNS setup
ip addr add $IPV4A/$IPV4N dev "${LINK}"
ip route add default via $IPV4G
echo "Set IPv4 address + gateway"

ip addr add $IPV6A/$IPV6C dev "${LINK}"
ip route add default via $IPV6G
echo "Set IPv6 address + gateway"

echo $DNS | sed -e 's/\(.*\)/nameserver \1/g' > /etc/resolv.conf
echo "Set DNS servers"

# vim: set ft=sh:
