From 40fe45c12bbf0b70842631dde74558059003b70d Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Mon, 13 Aug 2018 18:19:20 +0200
Subject: [PATCH 02/15] pds-4.18: drop irrelevant bits merged by mistake

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 drivers/leds/Kconfig                          |  14 --
 drivers/leds/Makefile                         |   2 -
 drivers/leds/leds-chromeos-keyboard.c         | 120 --------------
 drivers/leds/pixel_kb_backlight.c             |  85 ----------
 drivers/video/backlight/Makefile              |   1 -
 .../video/backlight/chromeos_keyboard_bl.c    | 155 ------------------
 6 files changed, 377 deletions(-)
 delete mode 100644 drivers/leds/leds-chromeos-keyboard.c
 delete mode 100644 drivers/leds/pixel_kb_backlight.c
 delete mode 100644 drivers/video/backlight/chromeos_keyboard_bl.c

diff --git a/drivers/leds/Kconfig b/drivers/leds/Kconfig
index 6be491d2df1a..6e3a998f3370 100644
--- a/drivers/leds/Kconfig
+++ b/drivers/leds/Kconfig
@@ -5,20 +5,6 @@ config LEDS_GPIO_REGISTER
 	  As this function is used by arch code it must not be compiled as a
 	  module.
 
-config LEDS_CHROMEOS_KEYBOARD
-  tristate "LED support for Chrome OS keyboards"
-  depends on LEDS_CLASS && ACPI
-  help
-    This option enables support for the LEDs on Chrome OS keyboards.
-    Say Y to enable keyboard LEDs on Chrome OS systems.
-
-config LEDS_PIXEL_KEYBOARD
-  tristate "LED support for Chrome OS keyboards"
-  depends on LEDS_CHROMEOS_KEYBOARD
-  help
-    This option enables support for the LEDs on Chromebook Pixel keyboards.
-    Say Y to enable keyboard LEDs on Chromebook Pixel systems.
-
 menuconfig NEW_LEDS
 	bool "LED Support"
 	help
diff --git a/drivers/leds/Makefile b/drivers/leds/Makefile
index f2f8a921fcea..420b5d2cfa62 100644
--- a/drivers/leds/Makefile
+++ b/drivers/leds/Makefile
@@ -65,8 +65,6 @@ obj-$(CONFIG_LEDS_MAX8997)		+= leds-max8997.o
 obj-$(CONFIG_LEDS_LM355x)		+= leds-lm355x.o
 obj-$(CONFIG_LEDS_BLINKM)		+= leds-blinkm.o
 obj-$(CONFIG_LEDS_SYSCON)		+= leds-syscon.o
-obj-$(CONFIG_LEDS_CHROMEOS_KEYBOARD)	+= leds-chromeos-keyboard.o
-obj-$(CONFIG_LEDS_PIXEL_KEYBOARD)	+= pixel_kb_backlight.o
 obj-$(CONFIG_LEDS_MENF21BMC)		+= leds-menf21bmc.o
 obj-$(CONFIG_LEDS_KTD2692)		+= leds-ktd2692.o
 obj-$(CONFIG_LEDS_POWERNV)		+= leds-powernv.o
diff --git a/drivers/leds/leds-chromeos-keyboard.c b/drivers/leds/leds-chromeos-keyboard.c
deleted file mode 100644
index 801b2ac1336f..000000000000
--- a/drivers/leds/leds-chromeos-keyboard.c
+++ /dev/null
@@ -1,120 +0,0 @@
-/*
- *  leds-chromeos-keyboard.c - Keyboard backlight LED driver for Chrome OS.
- *
- *  Copyright (C) 2012 Google, Inc.
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#include <linux/acpi.h>
-#include <linux/leds.h>
-#include <linux/delay.h>
-#include <linux/err.h>
-#include <linux/module.h>
-#include <linux/init.h>
-#include <linux/kernel.h>
-#include <linux/platform_device.h>
-#include <linux/slab.h>
-
-/* Keyboard LED ACPI Device must be defined in firmware */
-#define ACPI_KEYBOARD_BACKLIGHT_DEVICE	"\\_SB.KBLT"
-#define ACPI_KEYBOARD_BACKLIGHT_READ	ACPI_KEYBOARD_BACKLIGHT_DEVICE ".KBQC"
-#define ACPI_KEYBOARD_BACKLIGHT_WRITE	ACPI_KEYBOARD_BACKLIGHT_DEVICE ".KBCM"
-
-#define ACPI_KEYBOARD_BACKLIGHT_MAX		100
-
-static void keyboard_led_set_brightness(struct led_classdev *cdev,
-	enum led_brightness brightness)
-{
-	union acpi_object param;
-	struct acpi_object_list input;
-	acpi_status status;
-
-	if (!(cdev->flags & LED_SUSPENDED))
-		cdev->brightness = brightness;
-
-	param.type = ACPI_TYPE_INTEGER;
-	param.integer.value = brightness;
-	input.count = 1;
-	input.pointer = &param;
-
-	status = acpi_evaluate_object(NULL, ACPI_KEYBOARD_BACKLIGHT_WRITE,
-					  &input, NULL);
-	if (ACPI_FAILURE(status))
-		dev_err(cdev->dev, "Error setting keyboard LED value");
-}
-
-static int keyboard_led_probe(struct platform_device *pdev)
-{
-	struct led_classdev *cdev;
-	acpi_handle handle;
-	acpi_status status;
-	int ret;
-
-	/* Look for the keyboard LED ACPI Device */
-	status = acpi_get_handle(ACPI_ROOT_OBJECT,
-				 ACPI_KEYBOARD_BACKLIGHT_DEVICE,
-				 &handle);
-	if (ACPI_FAILURE(status)) {
-		dev_err(&pdev->dev, "Unable fo find ACPI device %s\n",
-			ACPI_KEYBOARD_BACKLIGHT_DEVICE);
-		return -ENODEV;
-	}
-
-	cdev = kzalloc(sizeof(struct led_classdev), GFP_KERNEL);
-	if (!cdev)
-		return -ENOMEM;
-	cdev->name = "chromeos::kbd_backlight";
-	cdev->brightness_set = keyboard_led_set_brightness;
-	cdev->max_brightness = ACPI_KEYBOARD_BACKLIGHT_MAX;
-	cdev->brightness = cdev->max_brightness;
-	cdev->flags |= LED_CORE_SUSPENDRESUME;
-
-	ret = led_classdev_register(&pdev->dev, cdev);
-	if (ret)
-		goto err;
-
-	platform_set_drvdata(pdev, cdev);
-	return 0;
-err:
-	kfree(cdev);
-	return ret;
-}
-
-static int keyboard_led_remove(struct platform_device *pdev)
-{
-	struct led_classdev *cdev = platform_get_drvdata(pdev);
-
-	platform_set_drvdata(pdev, NULL);
-	kfree(cdev);
-	return 0;
-}
-
-static struct platform_driver keyboard_led_driver = {
-	.driver		= {
-		.name	= "chromeos-keyboard-leds",
-		.owner	= THIS_MODULE,
-	},
-	.probe		= keyboard_led_probe,
-	.remove		= keyboard_led_remove,
-};
-
-module_platform_driver(keyboard_led_driver);
-
-MODULE_AUTHOR("Simon Que <sque@chromium.org>");
-MODULE_DESCRIPTION("ChromeOS Keyboard LED Driver");
-MODULE_LICENSE("GPL");
-MODULE_ALIAS("platform:chromeos-keyboard-leds");
diff --git a/drivers/leds/pixel_kb_backlight.c b/drivers/leds/pixel_kb_backlight.c
deleted file mode 100644
index 822329e7052e..000000000000
--- a/drivers/leds/pixel_kb_backlight.c
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- *  pixel_kb_backlight.c - Driver to Google Chromebook Pixel keyboard backlight devices.
- *
- *  Author : Benson Leung <bleung@chromium.org>
- * 
- *  Copyright (C) 2012 Google, Inc.
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#include <linux/dmi.h>
-#include <linux/i2c.h>
-#include <linux/input.h>
-#include <linux/interrupt.h>
-#include <linux/module.h>
-#include <linux/init.h>
-#include <linux/platform_device.h>
-
-#ifdef KB_BACKLIGHT
-#define DEVICE_NAME "chromeos-keyboard-backlight"
-#else
-#define DEVICE_NAME "chromeos-keyboard-leds"
-#endif
-
-static struct platform_device *kb_backlight_device;
-
-static int __init setup_keyboard_backlight(const struct dmi_system_id *id)
-{
-	kb_backlight_device =
-		platform_device_register_simple(DEVICE_NAME,
-						-1, NULL, 0);
-	if (IS_ERR(kb_backlight_device)) {
-		pr_warn("Error registering Chromebook Pixel keyboard LEDs.\n");
-		kb_backlight_device = NULL;
-	}
-	return 0;
-}
-
-static struct dmi_system_id __initdata pixel_kb_backlight_dmi_table[] = {
-	{
-		.ident = "Chromebook Pixel - Keyboard backlight",
-		.matches = {
-			DMI_MATCH(DMI_SYS_VENDOR, "GOOGLE"),
-			DMI_MATCH(DMI_PRODUCT_NAME, "Link"),
-		},
-		.callback = setup_keyboard_backlight,
-	},
-	{ }
-};
-MODULE_DEVICE_TABLE(dmi, pixel_kb_backlight_dmi_table);
-
-static int __init pixel_kb_backlight_init(void)
-{
-	if (!dmi_check_system(pixel_kb_backlight_dmi_table)) {
-		pr_debug("%s unsupported system.\n", __func__);
-		return -ENODEV;
-	}
-	return 0;
-}
-
-static void __exit pixel_kb_backlight_exit(void)
-{
-	if (kb_backlight_device)
-		platform_device_unregister(kb_backlight_device);
-}
-
-module_init(pixel_kb_backlight_init);
-module_exit(pixel_kb_backlight_exit);
-
-MODULE_DESCRIPTION("Chromebook Pixel Keyboard backlight driver");
-MODULE_AUTHOR("Benson Leung <bleung@chromium.org>");
-MODULE_LICENSE("GPL");
diff --git a/drivers/video/backlight/Makefile b/drivers/video/backlight/Makefile
index fcdcf2146d22..0dcc2c745c03 100644
--- a/drivers/video/backlight/Makefile
+++ b/drivers/video/backlight/Makefile
@@ -59,4 +59,3 @@ obj-$(CONFIG_BACKLIGHT_TPS65217)	+= tps65217_bl.o
 obj-$(CONFIG_BACKLIGHT_WM831X)		+= wm831x_bl.o
 obj-$(CONFIG_BACKLIGHT_ARCXCNN) 	+= arcxcnn_bl.o
 obj-$(CONFIG_BACKLIGHT_RAVE_SP)		+= rave-sp-backlight.o
-obj-$(CONFIG_BACKLIGHT_CHROMEOS_KEYBOARD) += chromeos_keyboard_bl.o
diff --git a/drivers/video/backlight/chromeos_keyboard_bl.c b/drivers/video/backlight/chromeos_keyboard_bl.c
deleted file mode 100644
index f1b94aaf8407..000000000000
--- a/drivers/video/backlight/chromeos_keyboard_bl.c
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- *  chromeos_keyboard_bl.c - Keyboard backlight driver for Chrome OS.
- *
- *  Copyright (C) 2012 The Chromium OS Authors
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#include <linux/acpi.h>
-#include <linux/backlight.h>
-#include <linux/delay.h>
-#include <linux/err.h>
-#include <linux/module.h>
-#include <linux/init.h>
-#include <linux/kernel.h>
-#include <linux/platform_device.h>
-#include <linux/slab.h>
-
-/* Keyboard Backlight ACPI Device must be defined in firmware */
-#define ACPI_KEYBOARD_BACKLIGHT_DEVICE	"\\_SB.KBLT"
-#define ACPI_KEYBOARD_BACKLIGHT_READ	ACPI_KEYBOARD_BACKLIGHT_DEVICE ".KBQC"
-#define ACPI_KEYBOARD_BACKLIGHT_WRITE	ACPI_KEYBOARD_BACKLIGHT_DEVICE ".KBCM"
-
-static int keyboard_backlight_update_status(struct backlight_device *device)
-{
-	union acpi_object param;
-	struct acpi_object_list input;
-	acpi_status status;
-
-	param.type = ACPI_TYPE_INTEGER;
-	param.integer.value = (u8)device->props.brightness;
-	input.count = 1;
-	input.pointer = &param;
-
-	status = acpi_evaluate_object(NULL, ACPI_KEYBOARD_BACKLIGHT_WRITE,
-				      &input, NULL);
-	if (ACPI_FAILURE(status)) {
-		dev_err(&device->dev, "Error setting keyboard backlight value");
-		return -1;
-	}
-	return 0;
-}
-
-static int keyboard_backlight_get_brightness(struct backlight_device *device)
-{
-	unsigned long long brightness;
-	acpi_status status;
-
-	status = acpi_evaluate_integer(NULL, ACPI_KEYBOARD_BACKLIGHT_READ,
-				       NULL, &brightness);
-
-	if (ACPI_FAILURE(status)) {
-		dev_err(&device->dev, "Error reading keyboard backlight value");
-		return -1;
-	}
-	return (int)brightness;
-}
-
-static const struct backlight_ops keyboard_backlight_ops = {
-	.update_status	= keyboard_backlight_update_status,
-	.get_brightness	= keyboard_backlight_get_brightness,
-};
-
-static int keyboard_backlight_probe(struct platform_device *pdev)
-{
-	struct backlight_device *bl;
-	struct backlight_properties props = {
-		.type = BACKLIGHT_FIRMWARE, .max_brightness = 100
-	};
-	acpi_handle handle;
-	acpi_status status;
-
-	/* Look for the keyboard backlight ACPI Device */
-	status = acpi_get_handle(ACPI_ROOT_OBJECT,
-				 ACPI_KEYBOARD_BACKLIGHT_DEVICE,
-				 &handle);
-	if (ACPI_FAILURE(status)) {
-		dev_err(&pdev->dev, "Unable fo find ACPI device %s\n",
-			ACPI_KEYBOARD_BACKLIGHT_DEVICE);
-		return -ENODEV;
-	}
-
-	bl = backlight_device_register("keyboard_backlight", &pdev->dev, NULL,
-				       &keyboard_backlight_ops, &props);
-	if (IS_ERR(bl)) {
-		dev_err(&pdev->dev, "failed to register backlight\n");
-		return PTR_ERR(bl);
-	}
-
-	bl->props.brightness = bl->props.max_brightness;
-	backlight_update_status(bl);
-
-	platform_set_drvdata(pdev, bl);
-	return 0;
-}
-
-static int keyboard_backlight_remove(struct platform_device *pdev)
-{
-	backlight_device_unregister(platform_get_drvdata(pdev));
-	return 0;
-}
-
-#ifdef CONFIG_PM_SLEEP
-static int keyboard_backlight_suspend(struct device *pdev)
-{
-	struct backlight_device *bl = dev_get_drvdata(pdev);
-	int saved_brightness = bl->props.brightness;
-
-	bl->props.brightness = 0;
-	backlight_update_status(bl);
-	bl->props.brightness = saved_brightness;
-	return 0;
-}
-
-static int keyboard_backlight_resume(struct device *pdev)
-{
-	struct backlight_device *bl = dev_get_drvdata(pdev);
-
-	backlight_update_status(bl);
-	return 0;
-}
-#endif  /* CONFIG_PM_SLEEP */
-
-static SIMPLE_DEV_PM_OPS(keyboard_backlight_pm, keyboard_backlight_suspend,
-			 keyboard_backlight_resume);
-
-static struct platform_driver keyboard_backlight_driver = {
-	.driver		= {
-		.name	= "chromeos-keyboard-backlight",
-		.owner	= THIS_MODULE,
-		.pm	= &keyboard_backlight_pm,
-	},
-	.probe		= keyboard_backlight_probe,
-	.remove		= keyboard_backlight_remove,
-};
-
-module_platform_driver(keyboard_backlight_driver);
-
-MODULE_AUTHOR("Simon Que <sque@chromium.org>");
-MODULE_DESCRIPTION("ChromeOS Keyboard Backlight Driver");
-MODULE_LICENSE("GPL");
-MODULE_ALIAS("platform:chromeos-keyboard-backlight");
-- 
2.18.0.547.g1d89318c4

