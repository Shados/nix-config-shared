From 4ce0d0744941b4c3f9cc7960ad38ad0a7bea0429 Mon Sep 17 00:00:00 2001
From: Chengguang Xu <cgxu519@gmx.com>
Date: Mon, 11 Mar 2019 11:31:25 +0200
Subject: [PATCH 2/2] block: Code cleanup for bio_find_or_create_slab()

It's just a simple code cleanup, not functional change.

Signed-off-by: Chengguang Xu <cgxu519@gmx.com>
---
 block/bio.c | 30 ++++++++++++++++--------------
 1 file changed, 16 insertions(+), 14 deletions(-)

diff --git a/block/bio.c b/block/bio.c
index 716510ecd7ff..443e544c103e 100644
--- a/block/bio.c
+++ b/block/bio.c
@@ -90,29 +90,27 @@ static struct kmem_cache *bio_find_or_create_slab(unsigned int extra_size)
 		else if (bslab->slab_size == sz) {
 			slab = bslab->slab;
 			bslab->slab_ref++;
-			break;
+			goto out_unlock;
 		}
 		i++;
 	}
 
-	if (slab)
-		goto out_unlock;
-
-	if (bio_slab_nr == bio_slab_max && entry == -1) {
-		new_bio_slab_max = bio_slab_max << 1;
-		new_bio_slabs = krealloc(bio_slabs,
+	if (entry == -1) {
+		if (bio_slab_nr == bio_slab_max) {
+			new_bio_slab_max = bio_slab_max << 1;
+			new_bio_slabs = krealloc(bio_slabs,
 					 new_bio_slab_max * sizeof(struct bio_slab),
 					 GFP_KERNEL);
-		if (!new_bio_slabs)
-			goto out_unlock;
-		bio_slab_max = new_bio_slab_max;
-		bio_slabs = new_bio_slabs;
+			if (!new_bio_slabs)
+				goto out_unlock;
+			bio_slab_max = new_bio_slab_max;
+			bio_slabs = new_bio_slabs;
+		}
+
+		entry = bio_slab_nr;
 	}
-	if (entry == -1)
-		entry = bio_slab_nr++;
 
 	bslab = &bio_slabs[entry];
-
 	snprintf(bslab->name, sizeof(bslab->name), "bio-%d", entry);
 	slab = kmem_cache_create(bslab->name, sz, ARCH_KMALLOC_MINALIGN,
 				 SLAB_HWCACHE_ALIGN, NULL);
@@ -122,6 +120,10 @@ static struct kmem_cache *bio_find_or_create_slab(unsigned int extra_size)
 	bslab->slab = slab;
 	bslab->slab_ref = 1;
 	bslab->slab_size = sz;
+
+	if (entry == bio_slab_nr)
+		bio_slab_nr++;
+
 out_unlock:
 	mutex_unlock(&bio_slab_lock);
 	return slab;
-- 
2.21.0.777.g83232e3864

